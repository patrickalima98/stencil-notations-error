/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from './stencil.core';
import {
  Color,
} from './interface';

export namespace Components {
  interface NvList {
    /**
    * If `true`, the list will have a **email** style.
    */
    'email': boolean;
    /**
    * If `true`, the header will have a sticky effect.
    */
    'stickyHeader': boolean;
    /**
    * If `true`, the list will have a **user** style.
    */
    'users'?: boolean;
  }
  interface NvListItem {
    /**
    * The company name used by **user** list.
    */
    'company'?: string;
    /**
    * The first name used by **user** list.
    */
    'firstName'?: string;
    /**
    * The last name used by **user** list.
    */
    'lastName'?: string;
    /**
    * The message text used by **email** list
    */
    'textMessage'?: string;
    /**
    * A stamp text for the message, used by **email** list.
    */
    'textStamp'?: string;
    /**
    * The subject text used by **email** list.
    */
    'textSubject'?: string;
    /**
    * The subtitle text's text for the list item.
    */
    'textSubtitle'?: string;
    /**
    * The text title for the list item.
    */
    'textTitle'?: string;
    /**
    * If `true`, a small rounded element, will be displayed on the left of the list Used by **email** list.
    */
    'unread'?: boolean;
  }
  interface NvSwitch {
    /**
    * If `true`, the switch is checked.
    */
    'checked': boolean;
    /**
    * The color of the Switch.
    */
    'color'?: Color;
    /**
    * If `true`, the user cannot interact with the Swicth.
    */
    'disabled': boolean;
  }
}

declare global {


  interface HTMLNvListElement extends Components.NvList, HTMLStencilElement {}
  var HTMLNvListElement: {
    prototype: HTMLNvListElement;
    new (): HTMLNvListElement;
  };

  interface HTMLNvListItemElement extends Components.NvListItem, HTMLStencilElement {}
  var HTMLNvListItemElement: {
    prototype: HTMLNvListItemElement;
    new (): HTMLNvListItemElement;
  };

  interface HTMLNvSwitchElement extends Components.NvSwitch, HTMLStencilElement {}
  var HTMLNvSwitchElement: {
    prototype: HTMLNvSwitchElement;
    new (): HTMLNvSwitchElement;
  };
  interface HTMLElementTagNameMap {
    'nv-list': HTMLNvListElement;
    'nv-list-item': HTMLNvListItemElement;
    'nv-switch': HTMLNvSwitchElement;
  }
}

declare namespace LocalJSX {
  interface NvList {
    /**
    * If `true`, the list will have a **email** style.
    */
    'email'?: boolean;
    /**
    * Emitted when the component is updated.
    */
    'onNvDidUpdate'?: (event: CustomEvent<any>) => void;
    /**
    * If `true`, the header will have a sticky effect.
    */
    'stickyHeader'?: boolean;
    /**
    * If `true`, the list will have a **user** style.
    */
    'users'?: boolean;
  }
  interface NvListItem {
    /**
    * The company name used by **user** list.
    */
    'company'?: string;
    /**
    * The first name used by **user** list.
    */
    'firstName'?: string;
    /**
    * The last name used by **user** list.
    */
    'lastName'?: string;
    /**
    * The message text used by **email** list
    */
    'textMessage'?: string;
    /**
    * A stamp text for the message, used by **email** list.
    */
    'textStamp'?: string;
    /**
    * The subject text used by **email** list.
    */
    'textSubject'?: string;
    /**
    * The subtitle text's text for the list item.
    */
    'textSubtitle'?: string;
    /**
    * The text title for the list item.
    */
    'textTitle'?: string;
    /**
    * If `true`, a small rounded element, will be displayed on the left of the list Used by **email** list.
    */
    'unread'?: boolean;
  }
  interface NvSwitch {
    /**
    * If `true`, the switch is checked.
    */
    'checked'?: boolean;
    /**
    * The color of the Switch.
    */
    'color'?: Color;
    /**
    * If `true`, the user cannot interact with the Swicth.
    */
    'disabled'?: boolean;
  }

  interface IntrinsicElements {
    'nv-list': NvList;
    'nv-list-item': NvListItem;
    'nv-switch': NvSwitch;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'nv-list': LocalJSX.NvList & JSXBase.HTMLAttributes<HTMLNvListElement>;
      'nv-list-item': LocalJSX.NvListItem & JSXBase.HTMLAttributes<HTMLNvListItemElement>;
      'nv-switch': LocalJSX.NvSwitch & JSXBase.HTMLAttributes<HTMLNvSwitchElement>;
    }
  }
}


